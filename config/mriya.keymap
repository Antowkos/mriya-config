/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESCAPE       &kp N1  &kp N2    &kp N3     &kp N4         &kp N5         &kp N6       &kp N7                   &kp N8           &kp N9         &kp N0    &kp MINUS
  &kp AT           &kp Q   &kp W     &kp E      &kp R          &kp T          &kp Y        &kp U                    &kp I            &kp O          &kp P     &kp LBKT
  &mt LCTRL GRAVE  &kp A   &kp S     &kp D      &kp F          &kp G          &kp H        &kp J                    &kp K            &kp L          &kp SEMI  &mt RCTRL SQT
  &kp LALT         &kp Z   &kp X     &kp C      &kp V          &kp B          &kp N        &kp M                    &kp COMMA        &kp DOT        &kp FSLH  &mt RALT BSLH
                           &kp LGUI  &lt 2 TAB  &mt LSHFT DOT  &lt 1 COMMA    &lt 1 ENTER  &mt RIGHT_COMMAND SPACE  &lt 2 BACKSPACE  &kp RG(SPACE)
            >;
        };

        lower_layer {
            bindings = <
  &trans          &trans           &trans        &trans        &trans        &trans    &trans  &trans                &trans                 &trans          &trans            &trans
  &trans          &kp EXCLAMATION  &kp N7        &kp N8        &kp N9        &trans    &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS        &kp EQUAL         &trans
  &mt LCTRL PLUS  &kp N0           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS       &kp GREATER_THAN  &trans
  &mt LALT EQUAL  &trans           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans    &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp LESS_THAN     &trans
                                   &trans        &lt 3 TAB     &kp LALT      &trans    &trans  &trans                &lt 3 DEL              &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans  &trans            &trans     &trans     &trans    &trans       &trans     &trans             &trans           &trans                &trans                &trans
  &trans  &trans            &trans     &trans     &trans    &trans       &trans     &kp K_MUTE         &kp UP_ARROW     &kp CAPSLOCK          &trans                &trans
  &trans  &kp LEFT_COMMAND  &kp LSHFT  &kp LCTRL  &kp LALT  &trans       &trans     &kp LEFT           &kp DOWN_ARROW   &kp RIGHT             &trans                &trans
  &trans  &trans            &trans     &trans     &trans    &trans       &trans     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
                            &trans     &trans     &trans    &lt 3 RET    &lt 3 ESC  &trans             &trans           &trans
            >;
        };

        adjust_layer {
            bindings = <
  &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
